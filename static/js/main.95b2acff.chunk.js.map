{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/AddNewExpense.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onChangedYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","expense","title","amount","ExpensesList","expenses","length","map","expenseItemData","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","expensesArr","useState","selectedYear","setSelectedYear","filteredExpenses","filter","exp","Number","selectedFilterParameterYear","console","log","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","toCloseForm","type","event","min","step","onClick","AddNewExpense","formActive","onClickButton","NewExpense","setFormActive","enteredExpenseData","random","toString","onAddExpense","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.95b2acff.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = props => {\r\n  // TO DO rename \"changeYear\" stuff to changeYearFilter or something like this\r\n  function yearFilterChangeHandler(e) {\r\n    props.onChangedYear(e.target.value);\r\n  }\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearFilterChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = props => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = props => {\r\n  const { expense } = props;\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={expense.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{expense.title}</h2>\r\n          <div className=\"expense-item__price\">${expense.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nfunction ExpensesList(props) {\r\n  if (props.expenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.expenses.map(expenseItemData => (\r\n        <ExpenseItem key={expenseItemData.id} expense={expenseItemData} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = '0%';\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100);\r\n  }\r\n  //\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nfunction Chart(props) {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  //\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map(dataPoint => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nfunction ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // Starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import './Expenses.css';\r\nimport React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = props => {\r\n  const { expensesArr } = props;\r\n\r\n  const [selectedYear, setSelectedYear] = useState('2020');\r\n\r\n  function selectChangedHandler(selectedFilterParameterYear) {\r\n    console.log('AHOY from Expenses.js ', selectedFilterParameterYear);\r\n    setSelectedYear(selectedFilterParameterYear);\r\n  }\r\n\r\n  const filteredExpenses = expensesArr.filter(\r\n    exp => exp.date.getFullYear() === Number(selectedYear)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={selectedYear}\r\n          onChangedYear={selectChangedHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList expenses={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  function titleChangeHandler(event) {\r\n    setEnteredTitle(event.target.value);\r\n  }\r\n  function amountChangeHandler(event) {\r\n    setEnteredAmount(event.target.value);\r\n  }\r\n  function dateChangeHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n\r\n    // Closing form\r\n    props.toCloseForm();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={props.toCloseForm}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","function AddNewExpense(props) {\r\n  function AddNewExpenseClickHandler() {\r\n    if (!props.formActive) props.onClickButton();\r\n  }\r\n  return <button onClick={AddNewExpenseClickHandler}>Add New Expense</button>;\r\n}\r\n\r\nexport default AddNewExpense;\r\n","import React, { useState } from 'react';\r\n\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport AddNewExpense from './AddNewExpense';\r\n\r\nfunction NewExpense(props) {\r\n  //\r\n  function saveExpenseDataHandler(enteredExpenseData) {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  }\r\n\r\n  const [formActive, setFormActive] = useState(false);\r\n\r\n  function addNewExpenseButtonHandler() {\r\n    setFormActive(true);\r\n  }\r\n\r\n  function cancelButtonHandler() {\r\n    setFormActive(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {formActive ? (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          toCloseForm={cancelButtonHandler}\r\n        />\r\n      ) : (\r\n        <AddNewExpense\r\n          formActive={formActive}\r\n          onClickButton={addNewExpenseButtonHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst INITIAL_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper (with sinkable hub)',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n  function addExpenseHandler(expense) {\n    console.log('In App.js ', expense);\n    setExpenses(prevExpenses => [expense, ...prevExpenses]);\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expensesArr={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}